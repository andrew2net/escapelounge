.col-md-6.col-xs-12
  .card
    .game-allowed-indicator
      - available = game.grades.select { |g| g.subscription_plans.select { |sp| sp.id == current_user.subscription_plan_id }.any? }.any? && current_user.period_end >= DateTime.now
      - if available
        %i.fa.fa-check-circle
      - else
        %i.fa.fa-times-circle
    .card-header{ style: "background-image: url(#{image_url(game.banner.url)})" }
    .card-body
      = link_to game do
        %h4= game.name
        %p= game.short_description&.first(125)

    .card-footer{ class: (available ? 'available-game' : '') }
      %ul
        %li
          %h6
            %i.fa.fa-clock
            Time
          %span= "#{game.time_length} min"
        %li
          %h6
            %i.fa.fa-th-list
            Steps
          %span= "#{game.game_steps.count} steps"
        %li
          %h6
            %i.fa.fa-users
            Grade
          %span= game.grades.map { |g| g.name}.join ', '
        %li
          %h6
            %i.fa.fa-star
            Difficulty
          %span= "#{game.difficulty}"

  -# .game-container{ style: "background-image: url(#{image_url(game.background.url(:thumb))});background-size:cover" }
  -#   -# = image_tag game.background.url :thumb, class: 'img-fluid'
  -#   %h4= game.name
  -#   %p= game.short_description
  -#   %p #{game.game_steps.count} Steps
  -#   %p Difficulty: #{game.difficulty}
  -#   %p Grades: #{game.grades.map(&:name).join ', '}
